name: Deploy ‡§°‡•Å‡§ï‡•É‡§£‡•ç‡§ï‡§∞‡§£‡•á to dukrnkarane.udapaana.in

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build and validation job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate HTML structure
        run: |
          echo "üîç Validating HTML..."
          if ! grep -q "<!DOCTYPE html>" index.html; then
            echo "‚ùå Error: Missing DOCTYPE in index.html"
            exit 1
          fi
          if ! grep -q "assets/css/styles.css" index.html; then
            echo "‚ùå Error: CSS reference not updated to assets/css/styles.css"
            exit 1
          fi
          if ! grep -q "assets/js/script.js" index.html; then
            echo "‚ùå Error: JS reference not updated to assets/js/script.js"
            exit 1
          fi
          echo "‚úÖ HTML structure looks good"

      - name: Check required files
        run: |
          echo "üîç Checking required files..."
          required_files=(
            "index.html"
            "assets/css/styles.css"
            "assets/js/script.js"
            "assets/wasm/shlesha.js"
            "assets/wasm/shlesha_bg.wasm"
            "README.md"
          )

          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "‚ùå Missing required file: $file"
              exit 1
            else
              echo "‚úÖ Found: $file"
            fi
          done

      - name: Validate content structure
        run: |
          echo "üîç Validating content structure..."

          # Check content directory
          if [ ! -d "content" ]; then
            echo "‚ùå Missing content directory"
            exit 1
          fi

          # Check markdown spec
          if [ ! -f "content/markdown-spec.md" ]; then
            echo "‚ùå Missing markdown specification"
            exit 1
          fi

          # Check data/sections
          if [ ! -d "data/sections" ]; then
            echo "‚ùå Missing data/sections directory"
            exit 1
          fi

          section_files=$(find data/sections -name "*.md" | wc -l)
          echo "üìÑ Found $section_files section files"

          if [ "$section_files" -lt 900 ]; then
            echo "‚ö†Ô∏è  Warning: Expected ~972 sections, found only $section_files"
          else
            echo "‚úÖ Section count looks good ($section_files files)"
          fi

      - name: Validate assets structure
        run: |
          echo "üîç Validating assets..."

          # Check CSS
          if ! grep -q "font-sanskrit-devanagari" assets/css/styles.css; then
            echo "‚ùå Missing Devanagari font variables in CSS"
            exit 1
          fi

          # Check JS has correct paths
          if ! grep -q 'from "../wasm/shlesha.js"' assets/js/script.js; then
            echo "‚ùå Incorrect Shlesha import path in script.js"
            exit 1
          fi

          if ! grep -q 'CONTENT_BASE_URL = "data/sections"' assets/js/script.js; then
            echo "‚ùå Content base URL not set to local path"
            exit 1
          fi

          echo "‚úÖ Assets structure validated"

      - name: Check WASM files
        run: |
          echo "üîç Checking WASM files..."

          wasm_size=$(wc -c < assets/wasm/shlesha_bg.wasm)
          js_size=$(wc -c < assets/wasm/shlesha.js)

          echo "üì¶ WASM binary: $wasm_size bytes"
          echo "üì¶ JS wrapper: $js_size bytes"

          if [ "$wasm_size" -lt 100000 ]; then
            echo "‚ö†Ô∏è  Warning: WASM file seems small ($wasm_size bytes)"
          fi

          echo "‚úÖ WASM files present"

      - name: Validate documentation
        run: |
          echo "üîç Validating documentation..."

          docs=(
            "README.md"
            "CHANGELOG.md"
            "docs/MARKERS.md"
            "docs/IMPLEMENTATION.md"
          )

          for doc in "${docs[@]}"; do
            if [ ! -f "$doc" ]; then
              echo "‚ö†Ô∏è  Missing documentation: $doc"
            else
              echo "‚úÖ Found: $doc"
            fi
          done

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Notify deployment success
        run: |
          echo "üéâ ‡§°‡•Å‡§ï‡•É‡§£‡•ç‡§ï‡§∞‡§£‡•á deployed successfully!"
          echo "üìç GitHub Pages URL: ${{ steps.deployment.outputs.page_url }}"
          echo "üåê Custom domain: https://dukrnkarane.udapaana.in"
          echo ""
          echo "‚úÖ Deployment complete!"
          echo "üî§ Multi-script support: IAST, Devanagari, Telugu, Nandinagari"
          echo "üìö 972 sections available"
          echo "‚úèÔ∏è  Edit suggestions enabled"
